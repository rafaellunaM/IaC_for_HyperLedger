- name: setup to install k8s on ubuntu 24.04
  hosts: all
  become: true
  tasks:

    - name: Update APT package cache
      apt:
        update_cache: yes

    - name: Install required dependencies
      apt:
        name:
          - curl
          - gnupg2
          - software-properties-common
          - apt-transport-https
          - ca-certificates
        state: present

    - name: Disable swap temporarily
      command: swapoff -a

    - name: Remove swap entry from /etc/fstab to disable it permanently
      replace:
        path: /etc/fstab
        regexp: '^\s*([^#].*\bswap\b.*)$'
        replace: '# \1'

    - name: Load kernel modules for container runtime
      modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - overlay
        - br_netfilter

    - name: Ensure kernel modules load at boot
      copy:
        dest: "/etc/modules-load.d/containerd.conf"
        content: |
          overlay
          br_netfilter

    - name: Load kernel
      ansible.builtin.shell:
        cmd: modprobe overlay && modprobe br_netfilter
      become: true

    - name: Configure sysctl for Kubernetes networking
      copy:
        dest: "/etc/sysctl.d/99-kubernetes-cri.conf"
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward                 = 1
      become: true

    - name: Apply sysctl parameters
      command: sysctl --system
      become: true

    - name: Install Containerd
      apt:
        name: containerd
        state: present

    - name: Ensure Containerd service is enabled and running
      systemd:
        name: containerd
        enabled: yes
        state: started

    - name: Generate default Containerd config
      command: containerd config default
      register: containerd_config

    - name: Ensure /etc/containerd directory exists
      file:
        path: /etc/containerd
        state: directory
        mode: '0755'

    - name: Save Containerd config
      copy:
        dest: /etc/containerd/config.toml
        content: "{{ containerd_config.stdout }}"

    - name: Enable SystemdCgroup in Containerd config
      ansible.builtin.shell:
        cmd: sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
      become: true

    - name: Restart Containerd to apply changes
      systemd:
        name: containerd
        state: restarted

    - name: Ensure /run/flannel directory exists
      file:
        path: /run/flannel
        state: directory

    - name: creating file subnet.env
      copy:
        dest: "/run/flannel/subnet.env"
        content: |
          FLANNEL_NETWORK=10.244.0.0/16
          FLANNEL_SUBNET=10.244.0.1/24
          FLANNEL_MTU=1450
          FLANNEL_IPMASQ=true
      become: true

    - name: Restart Containerd to apply changes
      systemd:
        name: containerd
        state: restarted
